/*
 * ReferenceDataAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.mulesoft.mocksvc.models;

import java.util.*;
import org.joda.time.LocalDate;

public class IndividualBaseTypeBuilder {
    //the instance to build
    private IndividualBaseType individualBaseType;

    /**
     * Default constructor to initialize the instance
     */
    public IndividualBaseTypeBuilder() {
        individualBaseType = new IndividualBaseType();
    }

    public IndividualBaseTypeBuilder id(String id) {
        individualBaseType.setId(id);
        return this;
    }

    public IndividualBaseTypeBuilder title(String title) {
        individualBaseType.setTitle(title);
        return this;
    }

    public IndividualBaseTypeBuilder givenNames(List<GivenNamesItem> givenNames) {
        individualBaseType.setGivenNames(givenNames);
        return this;
    }

    public IndividualBaseTypeBuilder lastName(String lastName) {
        individualBaseType.setLastName(lastName);
        return this;
    }

    public IndividualBaseTypeBuilder gender(String gender) {
        individualBaseType.setGender(gender);
        return this;
    }

    public IndividualBaseTypeBuilder dateOfBirth(LocalDate dateOfBirth) {
        individualBaseType.setDateOfBirth(dateOfBirth);
        return this;
    }

    public IndividualBaseTypeBuilder addresses(List<AddressesItem> addresses) {
        individualBaseType.setAddresses(addresses);
        return this;
    }

    public IndividualBaseTypeBuilder contactPreference(String contactPreference) {
        individualBaseType.setContactPreference(contactPreference);
        return this;
    }

    public IndividualBaseTypeBuilder emailAddress(String emailAddress) {
        individualBaseType.setEmailAddress(emailAddress);
        return this;
    }

    public IndividualBaseTypeBuilder businessPhoneNumber(String businessPhoneNumber) {
        individualBaseType.setBusinessPhoneNumber(businessPhoneNumber);
        return this;
    }

    public IndividualBaseTypeBuilder afterHoursPhoneNumber(String afterHoursPhoneNumber) {
        individualBaseType.setAfterHoursPhoneNumber(afterHoursPhoneNumber);
        return this;
    }

    public IndividualBaseTypeBuilder mobilePhoneNumber(String mobilePhoneNumber) {
        individualBaseType.setMobilePhoneNumber(mobilePhoneNumber);
        return this;
    }

    public IndividualBaseTypeBuilder taxFileNumber(String taxFileNumber) {
        individualBaseType.setTaxFileNumber(taxFileNumber);
        return this;
    }

    public IndividualBaseTypeBuilder tFNSupplied(Boolean tFNSupplied) {
        individualBaseType.setTFNSupplied(tFNSupplied);
        return this;
    }

    public IndividualBaseTypeBuilder occupationalCategory(String occupationalCategory) {
        individualBaseType.setOccupationalCategory(occupationalCategory);
        return this;
    }

    public IndividualBaseTypeBuilder occupation(String occupation) {
        individualBaseType.setOccupation(occupation);
        return this;
    }

    public IndividualBaseTypeBuilder employmentStatus(String employmentStatus) {
        individualBaseType.setEmploymentStatus(employmentStatus);
        return this;
    }

    public IndividualBaseTypeBuilder membershipDivision(String membershipDivision) {
        individualBaseType.setMembershipDivision(membershipDivision);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public IndividualBaseType build() {
        return individualBaseType;
    }
}